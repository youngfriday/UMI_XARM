name: umi

camera_obs_latency: 0.125
robot_obs_latency: 0.0001
gripper_obs_latency: 0.02
dataset_frequeny: 0 #59.94
obs_down_sample_steps: 3 # 3, 1
action_down_sample_steps: 3
low_dim_obs_horizon: 2
img_obs_horizon: 2
action_horizon: 16
ignore_proprioception: False

shape_meta: &shape_meta
  # acceptable types: rgb, low_dim
  obs:
    camera0_rgb:
      shape: [3, 224, 224]
      horizon: ${task.img_obs_horizon} # int
      latency_steps: 0 # float
      down_sample_steps: ${task.obs_down_sample_steps} # int
      type: rgb
      ignore_by_policy: False
    robot0_eef_pos:
      shape: [3]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}
    # robot0_eef_pos_abs:
    #   shape: [1]
    #   axis: [2] # 2 means z-axis
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    # robot0_eef_rot_axis_angle_abs:
    #   shape: [2]
    #   axis: [0, 1] # yaw and pitch
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    robot0_eef_rot_axis_angle:
      raw_shape: [3]
      shape: [6]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      rotation_rep: rotation_6d
      ignore_by_policy: ${task.ignore_proprioception}
    robot0_gripper_width:
      shape: [1]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.gripper_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}

    # pose with respect to episode start
    # robot0_eef_pos_wrt_start:
    #   shape: [3]
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    #   ignore_by_policy: ${task.ignore_proprioception}
    robot0_eef_rot_axis_angle_wrt_start:
      raw_shape: [3]
      shape: [6]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}
  action: 
    shape: [10]
    horizon: ${task.action_horizon}
    latency_steps: 0 # float
    down_sample_steps: ${task.action_down_sample_steps} # int
    rotation_rep: rotation_6d

task_name: &task_name umi
dataset_path: example_demo_session/dataset.zarr.zip
in_the_wild_dataset_path: example_demo_session/in_the_wild_dataset.zarr.zip
pose_repr: &pose_repr
  obs_pose_repr: relative # abs or rel
  action_pose_repr: relative # abs or rel or delta

env_runner:
  _target_: diffusion_policy.env_runner.real_pusht_image_runner.RealPushTImageRunner

dataset:
  _target_: diffusion_policy.dataset.umi_dataset.UmiDataset
  shape_meta: *shape_meta
  dataset_path: ${task.dataset_path}
  cache_dir: null
  pose_repr: *pose_repr
  action_padding: False
  temporally_independent_normalization: False
  repeat_frame_prob: 0.0
  max_duration: null
  seed: 42
  val_ratio: 0.05
  use_ratio: 1.0
  dataset_idx: null

in_the_wild_dataset:
  _target_: diffusion_policy.dataset.umi_dataset.UmiDataset
  shape_meta: *shape_meta
  dataset_path: ${task.in_the_wild_dataset_path}
  cache_dir: null
  pose_repr: *pose_repr
  action_padding: False
  temporally_independent_normalization: False
  repeat_frame_prob: 0.0
  max_duration: null
  seed: 42
  val_ratio: 0.0
  use_ratio: 1.0
